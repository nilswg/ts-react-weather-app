{"version":3,"sources":["common/components/Header/GithubLink/github.svg","common/components/Header/SwitchBtn/swtchBtn.tsx","common/components/Header/GithubLink/githubLink.tsx","app/hooks.ts","app/AppSlice.tsx","common/components/Header/header.tsx","common/components/Spinner/RocketLoading/rocketLoading.tsx","common/components/Spinner/spinner.tsx","api/reqLocations.tsx","api/reqWeater.tsx","common/components/Search/LocationItem/locationItem.tsx","common/components/Search/search.tsx","common/utils/getWeatherImage.ts","common/components/Forecast/forecast.tsx","common/components/Weather/ui/barChart.tsx","common/components/Weather/ui/pieChart.tsx","common/components/Weather/weather.tsx","app/bg.svg","app/darkBg.svg","app/theme.ts","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["_path","SwitchBtn","props","checked","id","theme","useState","isChecked","setIsChecked","Container","HiddenCheckBoxInput","type","onClick","e","ToogleFill","styled","label","width","beforeColor","afterColor","ballColor","input","div","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","xmlns","height","viewBox","ref","d","transform","ForwardRef","GithubLink","GithubLinkContainer","href","a","appTitleColor","useDispatch","hook_useDispatch","useSelector","hook_useSelector","initialState","darkMode","JSON","parse","localStorage","getItem","loading","locations","weathers","weatherCityName","searchInput","reducers","setDarkMode","state","setItem","toString","setLoading","action","payload","setLocations","setWeathers","setWeatherCityName","appSlice","createSlice","name","actions","selectWeathers","app","selectorCurrentWeather","createSelector","Header","dispatch","HeaderContainer","HeaderTitle","HeaderIconsContainer","header","h1","RocketLoading","Loader","Array","map","_","Dot","index","Rocket","p","Spinner","className","reqLocations","url","fetch","method","json","res","slice","reqWeather","woeid","LocationItem","cityName","hiddenSearchResult","then","err","console","error","Search","timer","delay","setInputStateCallBack","ref_element","callback","setSearchInput","searchResultVisible","setSearchResultVisible","ref_DebounceTimer","useRef","ref_SearchResult","debouncedInputChanged","current","clearTimeout","setTimeout","val","value","Error","useEffect","handleClickOutside","event","contains","document","addEventListener","removeEventListener","SearchContainer","placeholder","onChange","loc","location_type","search","bgColor","color","placeHolderColor","result","item","hoverBgColor","seperator","abbreviation","Map","getImage","weatherName","has","get","Forecast","ForecastContainer","w","applicable_date","src","getWeatherImage","weather_state_name","alt","Math","trunc","max_temp","min_temp","humidity","forecast","BarChart","min","distance1","distance","colors1","colors","max","distance2","colors2","BarChartContainer","MinBar","MaxBar","Number","span","pieChart","ChartContainer","Bottom","prop","Weather","cw","WeatherContainer","the_temp","weather","pie","bars","lightTheme","backgroundImage","lightBg","backgroundGradient","darkTheme","darkBg","App","GlobalStyles","createGlobalStyle","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.91654805.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,4A16.2,16.2,0,0,0,4,20.4,16.375,16.375,0,0,0,14.943,35.97c.8.15,1.094-.352,1.094-.79,0-.39-.016-1.42-.021-2.787-4.453.988-5.391-2.2-5.391-2.2a4.342,4.342,0,0,0-1.776-2.4c-1.453-1.014.109-.993.109-.993a3.37,3.37,0,0,1,2.448,1.687,3.362,3.362,0,0,0,4.656,1.367,3.564,3.564,0,0,1,1.016-2.195c-3.552-.411-7.286-1.821-7.286-8.106a6.448,6.448,0,0,1,1.646-4.405,6.057,6.057,0,0,1,.156-4.341s1.344-.438,4.4,1.682a14.859,14.859,0,0,1,8.01,0c3.057-2.12,4.4-1.682,4.4-1.682a6.009,6.009,0,0,1,.161,4.341A6.42,6.42,0,0,1,30.2,19.55c0,6.3-3.739,7.684-7.3,8.1a3.959,3.959,0,0,1,1.083,3.033c0,2.195-.016,3.962-.016,4.5,0,.438.286.95,1.1.79A16.378,16.378,0,0,0,36,20.4,16.2,16.2,0,0,0,20,4Z\",\n    transform: \"translate(-4 -4)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.7d3ce20c.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface SwitchButtonProps {\r\n  id: string;\r\n  checked: boolean;\r\n  theme: SwitchButtonThemeProps;\r\n  onClick?: (e: { id: string; isChecked: boolean }) => void;\r\n}\r\n\r\ninterface SwitchButtonThemeProps {\r\n  width?:string;\r\n  afterColor?: string;\r\n  beforeColor?: string;\r\n  ballColor?: string;\r\n}\r\n\r\nconst SwitchBtn = (props: SwitchButtonProps) => {\r\n  const { checked, id, theme } = props;\r\n  const [isChecked, setIsChecked] = useState(checked);\r\n\r\n  const handleClick = (e: any) => {\r\n    setIsChecked(!isChecked);\r\n    if (props.onClick){\r\n      props.onClick({id, isChecked});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container {...theme}>\r\n      <HiddenCheckBoxInput\r\n        type=\"checkbox\"\r\n        id={id || \"\"}\r\n        onClick={handleClick}\r\n      />\r\n      <ToogleFill checked={isChecked} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SwitchBtn;\r\n\r\n\r\nconst Container = styled.label<SwitchButtonThemeProps>`\r\n  --width: ${(props) => props.width || \"2rem\"};\r\n  --height: calc(var(--width) / 2);\r\n  --radius: calc(var(--height) / 2);\r\n  --beforeColor: ${(props) => props.beforeColor || \"#ddd\"};\r\n  --afterColor: ${(props) => props.afterColor || \"#34deeb\"};\r\n  --ballColor: ${(props) => props.ballColor || \"#fff\"};\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst HiddenCheckBoxInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ToogleFill = styled.div<{ checked: boolean }>`\r\n  /* 底色 */\r\n  position: relative;\r\n  width: var(--width);\r\n  height: var(--height);\r\n  border-radius: var(--radius);\r\n  background: ${(props) =>\r\n    props.checked ? `var(--afterColor)` : `var(--beforeColor)`};\r\n  transition: background 0.2s;\r\n\r\n  /* 球球與陰影效果 */\r\n  ::after {\r\n    /* 透過after實現了相對內部移動的效果 */\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: var(--height);\r\n    width: var(--height);\r\n    background: var(--ballColor);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: var(--radius);\r\n    transform: ${(props) =>\r\n      props.checked ? `translateX(110%)` : `translateX(0%)`};\r\n    transition: transform 0.5s;\r\n  }\r\n`;\r\n","import { ReactComponent as GithubIcon } from './github.svg';\r\nimport styled from \"styled-components\";\r\n\r\nconst GithubLink = () => {\r\n  return (\r\n    <GithubLinkContainer href=\"https://github.com/nilswg/ts-react-weather-app\">\r\n      <GithubIcon/>\r\n    </GithubLinkContainer>\r\n  );\r\n};\r\n\r\nexport default GithubLink;\r\n\r\nconst GithubLinkContainer = styled.a`\r\n  margin-left: 1rem;\r\n  svg {\r\n    fill: ${({ theme }) => theme.appTitleColor};\r\n  }\r\n  &:hover svg {\r\n    fill: #20546a;\r\n  }\r\n`;\r\n","import {\n  TypedUseSelectorHook,\n  useDispatch as hook_useDispatch,\n  useSelector as hook_useSelector,\n} from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\nimport { useEffect } from \"react\";\n\n// 不要直接用store.getState(),useSelector會在你store發生改變時重新渲染，省掉\"訂閱\"部分\nexport const useDispatch = () => hook_useDispatch<AppDispatch>();\n\n// redux會自動幫我們創建context\nexport const useSelector: TypedUseSelectorHook<RootState> = hook_useSelector;\n\n// 判斷點擊事件是否在該元素外面\nexport const useClickOutside = (ref_element: any, callback: Function) => {\n  useEffect(() => {\n    const handleClickOutside = (event: Event) => {\n      if (ref_element.current && !ref_element.current.contains(event.target as any)) {\n        callback();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n};\n\n/**\n * \n * @param timer debounce timer by useRef\n * @param delay debounce delay time\n * @param setInputStateCallBack callback when input changed\n * @returns (e) => setInputState(e.target.value)\n * \n * \n * Create a debounced setinputstate callback for your input onChange\n * \n * ex :\n * \n *    const [searchInput, setSearchInput] = useState(\"\");\n *    const ref_DebounceTimer = useRef<any>(null);\n *    debouncedInputChanged = useDebouncedInput(ref_DebounceTimer, 200, setInput)\n * \n *    return(\n *      <input type=\"text\" onChange={debouncedInputChanged} />\n *    )\n */\nexport const useDebouncedInput = (\n  timer: any,\n  delay: number,\n  setInputStateCallBack: React.Dispatch<React.SetStateAction<string>>\n) => {\n  return (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (timer?.current !== null) {\n      clearTimeout(timer.current);\n    }\n    try {\n      timer.current = setTimeout(() => {\n        let val = e.target.value || \"\";\n        setInputStateCallBack.call(this, val);\n      }, delay);\n    } catch (error) {\n      throw new Error(\"useDebouncedInput Error\");\n    }\n  };\n};\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport LocationData from \"../common/interfaces/locationData\";\r\nimport WeatherData from \"../common/interfaces/weatherData\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface AppState {\r\n  darkMode: boolean;\r\n  loading: boolean;\r\n  locations: LocationData[];\r\n  weathers: WeatherData[];\r\n  weatherCityName: string;\r\n  searchInput: string;\r\n}\r\n\r\n// const testWeatherData = [\r\n//   {\r\n//     \"id\": 6405636616093696,\r\n//     \"weather_state_name\": \"Heavy Cloud\",\r\n//     \"weather_state_abbr\": \"hc\",\r\n//     \"wind_direction_compass\": \"SSW\",\r\n//     \"created\": \"2021-10-23T15:59:02.033333Z\",\r\n//     \"applicable_date\": \"2021-10-23\",\r\n//     \"min_temp\": 6.355,\r\n//     \"max_temp\": 14.280000000000001,\r\n//     \"the_temp\": 13.32,\r\n//     \"wind_speed\": 4.273517302219041,\r\n//     \"wind_direction\": 197.73224499203155,\r\n//     \"air_pressure\": 1026,\r\n//     \"humidity\": 66,\r\n//     \"visibility\": 11.982832756700866,\r\n//     \"predictability\": 71\r\n//   }\r\n// ]\r\n\r\nconst initialState: AppState = {\r\n  darkMode: JSON.parse(localStorage.getItem(\"dark_mode\") as string) as boolean,\r\n  loading: false,\r\n  locations: [],\r\n  weathers: [],\r\n  weatherCityName:\"\",\r\n  searchInput:\"\",\r\n};\r\n\r\nconst reducers = {\r\n  setDarkMode: (state: AppState) => {\r\n    localStorage.setItem(\"dark_mode\", (!state.darkMode).toString());\r\n    state.darkMode = !state.darkMode;\r\n  },\r\n  setLoading: (state: AppState, action: { payload: boolean }) => {\r\n    state.loading = action.payload;\r\n  },\r\n  setLocations:(state: AppState, action: { payload: { locations: LocationData[] }}) => {\r\n    state.locations = action.payload.locations;\r\n  },\r\n  setWeathers: (state: AppState, action: { payload: { weathers: WeatherData[] }}) => {\r\n    state.weathers = action.payload.weathers;\r\n  },\r\n  setWeatherCityName:(state: AppState, action: { payload: string}) => {\r\n    state.weatherCityName = action.payload;\r\n  },\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers,\r\n});\r\n\r\nexport const { setDarkMode, setLoading, setLocations, setWeathers, setWeatherCityName } = appSlice.actions;\r\nexport default appSlice.reducer;\r\n\r\n\r\nexport const selectWeathers = (state:RootState) => state.app.weathers\r\nexport const selectorCurrentWeather = createSelector(\r\n    [selectWeathers],\r\n    (weathers) => weathers[0]\r\n)\r\n\r\n","import SwitchBtn from \"./SwitchBtn/swtchBtn\";\r\nimport GithubLink from \"./GithubLink/githubLink\";\r\nimport { useDispatch } from \"../../../app/hooks\";\r\nimport { setDarkMode } from \"../../../app/AppSlice\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const darkModeSwitchClick = () => {\r\n    dispatch(setDarkMode());\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderTitle>React Weather</HeaderTitle>\r\n      <HeaderIconsContainer>\r\n        <SwitchBtn\r\n          id=\"darkmode-btn\"\r\n          checked={false}\r\n          onClick={darkModeSwitchClick}\r\n          theme={{\r\n            beforeColor: \"#34deeb\",\r\n            afterColor: \"#235A84\",\r\n            width: \"3rem\",\r\n          }}\r\n        />\r\n        <GithubLink />\r\n      </HeaderIconsContainer>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nexport const HeaderContainer = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 8rem;\r\n`;\r\nexport const HeaderTitle = styled.h1`\r\n  color: ${({ theme }) => theme.appTitleColor};\r\n  font-size: 2.2rem;\r\n`;\r\nexport const HeaderIconsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import { IoMdRocket } from \"react-icons/io\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function RocketLoading() {\r\n  return (\r\n    <Loader>\r\n      {[...Array(20)].map((_, i) => {\r\n        return <Dot key={`dot_${i}`} index={i} />;\r\n      })}\r\n      <Rocket>\r\n        <IoMdRocket />\r\n      </Rocket>\r\n    </Loader>\r\n  );\r\n}\r\n\r\nconst Loader = styled.div`\r\n  --speed: 1;\r\n  --scale: 1;\r\n  --dotColor: #fff;\r\n  --rocketColor: #fff;\r\n\r\n  position: relative;\r\n  width: calc(120px * var(--scale));\r\n  height: calc(120px * var(--scale));\r\n  // background-color: brown;\r\n`;\r\n\r\nconst Dot = styled.div<{ index: number }>`\r\n  --i: ${(p) => p.index};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: rotate(calc(180deg + 18deg * var(--i)));\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(15px * var(--scale));\r\n    height: calc(15px * var(--scale));\r\n    background-color: var(--dotColor);\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    animation: rocketFlying calc(2s / var(--speed)) linear infinite;\r\n    animation-delay: calc(0.1s / var(--speed) * var(--i));\r\n  }\r\n\r\n  @keyframes rocketFlying {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    10% {\r\n      transform: scale(1.2);\r\n    }\r\n    80%,\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Rocket = styled.div`\r\n  /* background-color: brown; */\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--rocketColor);\r\n  font-size: calc(50px * var(--scale));\r\n  animation: rotating calc(2s / var(--speed)) linear infinite;\r\n  animation-delay: calc(-1s / var(--speed));\r\n\r\n  svg {\r\n    transform: rotate(45deg);\r\n    position: relative;\r\n    top: calc(-15px * var(--scale));\r\n    left: calc(-15px * var(--scale));\r\n  }\r\n\r\n  @keyframes rotating {\r\n    0% {\r\n      transform: rotate(10deg);\r\n    }\r\n    100% {\r\n      transform: rotate(370deg);\r\n    }\r\n  }\r\n`;\r\n","import RocketLoading from \"./RocketLoading/rocketLoading\"\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <RocketLoading/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","const reqLocations = async(input:string)=>{\r\n\r\n    /**\r\n     * when you call metaweather api is would be blocked by cors problem,\r\n     * because metaweather don't have \"Access-Control-Allow-Origin\" in their response header.\r\n     * \r\n     * There are some ways, you can solved this problem:\r\n     * \r\n     * 1) Download some extensions to your browser, ex: CORS Unblock for Chrome\r\n     *    But it only work on your own pc 🤔\r\n     * \r\n     * 2) Take look at \"https://cors-anywhere.herokuapp.com/\", it can help you request temporarily.\r\n     * \r\n     * 3) Build a proxy server to get data from metaweather for your own. ex: https://github.com/kaveets24/react-metaweather\r\n     * \r\n     * 4) Or, JUST DO NOT USE metaweather, there are better api resources to build app.\r\n     * \r\n     */\r\n    // const url = `https://react-metaweather.herokuapp.com/api/location/search/${input}` // backup\r\n    const url = `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${input}`;\r\n    const res = await ( \r\n        await fetch(url, {\r\n            method: \"GET\",\r\n            \r\n        })\r\n    ).json();\r\n\r\n    return res.slice(0, 6);\r\n}\r\n\r\nexport default reqLocations","const reqWeather = async(woeid:string) =>{\r\n    /**\r\n     * when you call metaweather api is would be blocked by cors problem,\r\n     * because metaweather don't have \"Access-Control-Allow-Origin\" in their response header.\r\n     * \r\n     * There are some ways, you can solved this problem:\r\n     * \r\n     * 1) Download some extensions to your browser, ex: CORS Unblock for Chrome\r\n     *    But it only work on your own pc 🤔\r\n     * \r\n     * 2) Take look at \"https://cors-anywhere.herokuapp.com/\", it can help you request temporarily.\r\n     * \r\n     * 3) Build a proxy server to get data from metaweather for your own. ex: https://github.com/kaveets24/react-metaweather\r\n     * \r\n     * 4) Or, JUST DO NOT USE metaweather, there are better api resources to build app.\r\n     * \r\n     */\r\n    const url = `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${woeid}`;\r\n    const res = await ( \r\n        await fetch(url, {\r\n            method: \"GET\",\r\n        })\r\n    ).json();\r\n\r\n    return res[\"consolidated_weather\"].slice(0, 5);\r\n}\r\nexport default reqWeather","import reqWeather from \"../../../../api/reqWeater\";\r\nimport { useDispatch } from \"../../../../app/hooks\";\r\nimport WeatherData from \"../../../interfaces/weatherData\";\r\nimport { setLoading, setWeatherCityName, setWeathers } from \"../../../../app/AppSlice\";\r\n\r\ninterface LocationItemProps {\r\n  id: string;\r\n  cityName: string;\r\n  hiddenSearchResult:Function;\r\n}\r\n\r\nconst LocationItem = (props: LocationItemProps) => {\r\n  const { id, cityName, hiddenSearchResult } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = () => {\r\n\r\n    hiddenSearchResult();\r\n\r\n    dispatch(setWeatherCityName(cityName));\r\n\r\n    dispatch(setLoading(true));\r\n    reqWeather(id).then(\r\n      (res: WeatherData[]) => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setWeathers({ weathers: res }));\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <a id={id} onClick={onClick}>\r\n      {cityName}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default LocationItem;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport reqLocations from \"../../../api/reqLocations\";\r\nimport { setLocations } from \"../../../app/AppSlice\";\r\nimport { useDebouncedInput, useClickOutside, useDispatch } from \"../../../app/hooks\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport LocationData from \"../../interfaces/locationData\";\r\nimport LocationItem from \"./LocationItem/locationItem\";\r\nimport \"./search.css\";\r\n\r\nconst Search = () => {\r\n  const locations = useSelector((state: RootState) => state.app.locations);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [searchResultVisible, setSearchResultVisible] = useState(false);\r\n  const ref_DebounceTimer = useRef<any>(null);\r\n  const ref_SearchResult = useRef<any>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const debouncedInputChanged = useDebouncedInput(ref_DebounceTimer, 200, setSearchInput)\r\n\r\n  const hiddenSearchResult = () => setSearchResultVisible(false);\r\n  useClickOutside(ref_SearchResult, hiddenSearchResult);\r\n\r\n  useEffect(() => {\r\n    if (!searchInput) {\r\n      return;\r\n    }\r\n    setSearchResultVisible(true);\r\n    reqLocations(searchInput).then(\r\n      (res: LocationData[]) => {\r\n        dispatch(setLocations({ locations: res }));\r\n        // console.log(res);\r\n      },\r\n      (err) => {\r\n        dispatch(setLocations({ locations: [] }));\r\n        // throw Error(err);\r\n        console.error(err);\r\n      }\r\n    );\r\n  }, [dispatch, searchInput]);\r\n\r\n  return (\r\n    <SearchContainer>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search-container-input\"\r\n        placeholder=\"Type your location (๑•̀ㅂ•́)و✧ \"\r\n        onChange={debouncedInputChanged}\r\n      />\r\n      {/* <Locations/> */}\r\n      {searchResultVisible && (\r\n        <div className=\"search-result\" ref = {ref_SearchResult}>\r\n          {locations?.map((loc: LocationData, i) => {\r\n            const { woeid, title, location_type } = loc;\r\n            const key = `${woeid}`;\r\n            return (\r\n              <LocationItem\r\n                key={key}\r\n                id={key}\r\n                cityName={`${title} ${location_type}`}\r\n                hiddenSearchResult={hiddenSearchResult}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst SearchContainer = styled.div`\r\n  --searchBgColor: ${({ theme }) => theme.search.bgColor};\r\n  --searchInputColor: ${({ theme }) => theme.search.input.color};\r\n  --searchInputPlaceHolderColor: ${({ theme }) => theme.search.input.placeHolderColor};\r\n  --resultBgColor:  ${({ theme }) => theme.search.result.bgColor};\r\n  --resultItemColor: ${({ theme }) => theme.search.result.item.color};\r\n  --resultItemHoverBgColor: ${({ theme }) => theme.search.result.item.hoverBgColor};\r\n  --seperatorColor: ${({ theme }) => theme.search.result.seperator.color};\r\n  \r\n  position: relative; // search-result locate\r\n`;\r\n","const abbreviation = new Map([\r\n  [\"Snow\", \"sn\"],\r\n  [\"Sleet\", \"sl\"],\r\n  [\"Hail\", \"h\"],\r\n  [\"Thunderstorm\", \"t\"],\r\n  [\"Heavy Rain\", \"hr\"],\r\n  [\"Light Rain\", \"lr\"],\r\n  [\"Showers\", \"s\"],\r\n  [\"Heavy Cloud\", \"hc\"],\r\n  [\"Light Cloud\", \"lc\"],\r\n  [\"Clear\", \"c\"],\r\n]);\r\n\r\nconst url = \"https://www.metaweather.com/static/img/weather/\";\r\n\r\nconst getImage = (weatherName: string): string => {\r\n  if (!abbreviation.has(weatherName)) {\r\n    throw Error(\"weather svg doesn't exit.\");\r\n  }\r\n  return `${url}${abbreviation.get(weatherName)}.svg`;\r\n};\r\n\r\nexport default getImage;\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { selectWeathers } from \"../../../app/AppSlice\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport getWeatherImage from \"../../utils/getWeatherImage\";\r\nimport \"./forecast.css\"\r\n\r\nconst Forecast = () => {\r\n  const weathers = useSelector(selectWeathers);\r\n  return weathers.length ? (\r\n    <ForecastContainer>\r\n      <h1 className=\"forecast-container-title\">Following 5 Days Forecast</h1>\r\n      <div className=\"forecast-context\">\r\n        {weathers?.map((w) => (\r\n          <div className=\"forecast-item\">\r\n            <h3>{w.applicable_date}</h3>\r\n            <img\r\n              src={getWeatherImage(w.weather_state_name)}\r\n              alt={w.weather_state_name}\r\n            />\r\n            <h3>{w.weather_state_name}</h3>\r\n            <div className=\"forecast-last-item\">\r\n                <p>{`T:${Math.trunc(w.max_temp)}°/${Math.trunc(w.min_temp)}°`}</p>\r\n                <p>{`H: ${w.humidity}%`}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </ForecastContainer>\r\n  ) : (<Fragment />);\r\n};\r\n\r\nexport default Forecast;\r\n\r\n\r\nconst ForecastContainer = styled.div`\r\n  --forecastbgColor:${({ theme }) => theme.forecast.bgColor};\r\n  --forecastTitleColor:${({ theme }) => theme.forecast.title};\r\n\r\n  width: 100%;\r\n  background-color: var(--forecastbgColor);\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  margin-top: 1rem;\r\n`","import styled from \"styled-components\";\r\n\r\n// https://medium.com/swlh/how-to-build-a-simple-and-interactive-bar-chart-with-react-js-and-css-in-js-6d48f0924d25\r\n\r\n// const __DATA__ = [\r\n//     { distance: 13, colors: [\"#ffd847\", \"#e0a106\"] },\r\n//     { distance: 20, colors: [\"#ff47ab\", \"#e0064e\"] },\r\n//     { distance: 16, colors: [\"#add9c0\", \"#1da890\"] },\r\n//     { distance: 30, colors: [\"#cbd9ad\", \"#7ca81d\"] },\r\n//     { distance: 22, colors: [\"#d9c1ad\", \"#714511\"] },\r\n//   ];\r\n\r\ninterface UIBarData {\r\n    distance: number, \r\n    colors: string[],\r\n}\r\n\r\nexport const BarChart = (props:{min: UIBarData, max: UIBarData})=>{\r\n    const {distance: distance1, colors: colors1} = props.min;\r\n    const {distance: distance2, colors: colors2} = props.max;\r\n    return (\r\n        <>\r\n        <BarChartContainer>\r\n          <Number color={colors1[1]}>{distance1}°</Number>\r\n          <MinBar height={distance1 * 2} colors={colors1} />\r\n        </BarChartContainer>\r\n        <BarChartContainer>\r\n          <MaxBar height={distance2 * 2} colors={colors2} />\r\n          <Number color={ colors2[1]}>{distance2}°</Number>\r\n        </BarChartContainer>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default BarChart;\r\n\r\nconst BarChartContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: var(--barChartbgColor);\r\n    margin-top: 5px;\r\n`\r\n\r\nconst Number = styled.span`\r\n  padding: 0 5px;\r\n  font-size: 1.5rem;\r\n  text-align: center;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst MinBar = styled.div<{ height: number; colors: string[] }>`\r\n  width: ${(props) => props.height}px;\r\n  height: 1.5rem;\r\n  border-radius: 1rem 0 0 1rem;\r\n  background: linear-gradient(\r\n    to right,\r\n    ${(props) => props.colors[0]},\r\n    ${(props) => props.colors[1]}\r\n  );\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  @media (max-width: 420px) {\r\n    width: 34px;\r\n  }\r\n`;\r\n\r\nconst MaxBar = styled.div<{ height: number; colors: string[] }>`\r\n  width: ${(props) => props.height}px;\r\n  height: 1.5rem;\r\n  border-radius: 0 1rem 1rem 0;\r\n  background: linear-gradient(\r\n    to left,\r\n    ${(props) => props.colors[0]},\r\n    ${(props) => props.colors[1]}\r\n  );\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  @media (max-width: 420px) {\r\n    width: 34px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst pieChart = (props: { value: number }) => {\r\n  return (\r\n    <ChartContainer>\r\n      <Bottom value={props.value} />\r\n      <Number>{props.value}%</Number>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default pieChart;\r\n\r\nconst ChartContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: none;\r\n  height: 12em;\r\n  width: 12em;\r\n`;\r\n\r\nconst Bottom = styled.div<{ value: number }>`\r\n  position: relative;\r\n  width: 10em;\r\n  height: 10em;\r\n  border-radius: 50%;\r\n  background: conic-gradient(\r\n    #3f87a6 ${(prop) => prop.value}%,\r\n    var(--pieChartbgColor) ${(prop) => 100 - prop.value}%\r\n  );\r\n  transition: 1s ease-in-out;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 8em;\r\n    height: 8em;\r\n    border-radius: 50%;\r\n    background-color: var(--pieChartbgColor);\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.6);\r\n  }\r\n`;\r\n\r\nconst Number = styled.h1`\r\n  position: absolute;\r\n  font-size: 2rem;\r\n  background-color: none;\r\n  color: rgb(123, 152, 178);\r\n  text-shadow: 0.1em 0.1em 0.2em rgba(0, 0, 0, 0.3);\r\n`;\r\n","import { Fragment } from \"react\";\r\nimport { selectorCurrentWeather } from \"../../../app/AppSlice\";\r\nimport { useSelector } from \"../../../app/hooks\";\r\nimport getWeatherImage from \"../../utils/getWeatherImage\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport BarChart from \"./ui/barChart\";\r\nimport PieChart from \"./ui/pieChart\";\r\nimport styled from \"styled-components\";\r\nimport \"./weather.css\";\r\n\r\nconst Weather = () => {\r\n  const cw = useSelector(selectorCurrentWeather);\r\n  const weatherCityName = useSelector(\r\n    (state: RootState) => state.app.weatherCityName\r\n  );\r\n  return cw ? (\r\n    <WeatherContainer>\r\n      <h1 className=\"weather-title\">{`Weather Today ${cw.applicable_date}`}</h1>\r\n      <div className=\"weather-content\">\r\n        <div className=\"weather-content-left\">\r\n          <h2>{weatherCityName}</h2>\r\n          <div className=\"weather-content-left-icon\">\r\n            <img\r\n              src={getWeatherImage(cw.weather_state_name)}\r\n              alt={cw.weather_state_name}\r\n            ></img>\r\n            <h1>{`${Math.trunc(cw.the_temp)}°`}</h1>\r\n          </div>\r\n          <h2>{cw.weather_state_name}</h2>\r\n        </div>\r\n        <div className=\"weather-content-right\">\r\n          <p>{`Humidity`}</p>\r\n          <PieChart value={cw.humidity} />\r\n          <p>{`Min / Max Temp`}</p>\r\n          <div className=\"weather-content-right-barchart\">\r\n            <BarChart\r\n              min={{\r\n                distance: Math.trunc(cw.min_temp),\r\n                colors: [\"#add9c0\", \"#4a6fa1\"],\r\n              }}\r\n              max={{\r\n                distance: Math.trunc(cw.max_temp),\r\n                colors: [\"#ff47ab\", \"#e0064e\"],\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </WeatherContainer>\r\n  ) : (<Fragment />);\r\n};\r\n\r\nexport default Weather;\r\n\r\nconst WeatherContainer = styled.div`\r\n  --weatherbgColor: ${({ theme }) => theme.weather.bgColor};\r\n  --weatherTitleColor: ${({ theme }) => theme.weather.title};\r\n  --pieChartbgColor: ${({ theme }) => theme.weather.pie.bgColor};\r\n  --barChartbgColor: ${({ theme }) => theme.weather.bars.bgColor};\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--weatherbgColor);\r\n  margin-top: 20px;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/bg.b68c273b.svg\";","export default __webpack_public_path__ + \"static/media/darkBg.60488de1.svg\";","import { DefaultTheme } from \"styled-components\";\r\n\r\nimport lightBg from \"./bg.svg\";\r\nimport darkBg from \"./darkBg.svg\";\r\n\r\n// and extend them!\r\n// 參考 : https://styled-components.com/docs/api#create-a-declarations-file\r\ndeclare module \"styled-components\" {\r\n  export interface DefaultTheme {\r\n    backgroundImage: string;\r\n    backgroundGradient: string[];\r\n    appTitleColor: string;\r\n    search:{\r\n      bgColor:string,\r\n      input:{\r\n        color:string,\r\n        placeHolderColor:string,\r\n      },\r\n      result:{\r\n        bgColor:string,\r\n        item:{\r\n          color:string,\r\n          hoverBgColor:string,\r\n        }\r\n        seperator:{\r\n          color:string,\r\n        }\r\n      }\r\n    },\r\n    weather:{\r\n      bgColor:string,\r\n      title:string,\r\n      pie:{\r\n        bgColor:string,\r\n      },\r\n      bars:{\r\n        bgColor:string,\r\n      }\r\n    },\r\n    forecast:{\r\n      bgColor:string,\r\n      title:string,\r\n    }\r\n  }\r\n}\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  backgroundImage: lightBg,\r\n  backgroundGradient: [\"#F9FFFF\", \"#38C8E6\"],\r\n  appTitleColor: \"#2F5D8A\",\r\n\r\n  search:{\r\n    bgColor:\"#ffffff\",\r\n    input:{\r\n      color:\"#727E8E\",\r\n      placeHolderColor:\"#6898d5\",\r\n    },\r\n    result:{\r\n      bgColor:\"#ffffff\",\r\n      item:{\r\n        color:\"#727E8E\",\r\n        hoverBgColor:'#f9f9f9',\r\n      },\r\n      seperator:{\r\n        color:'#ccc',\r\n      }\r\n    }\r\n  },\r\n  weather:{\r\n    bgColor:\"#ffffff\",\r\n    title: \"#2F5D8A\",\r\n    pie:{\r\n      bgColor:\"#ffffff\",\r\n    },\r\n    bars:{\r\n      bgColor:\"#ffffff\",\r\n    }\r\n  },\r\n  forecast:{\r\n    bgColor:\"#ffffff\",\r\n    title: \"#2F5D8A\",\r\n  }\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  backgroundImage: darkBg,\r\n  backgroundGradient: [\"#031027\", \"#02101D\"],\r\n  appTitleColor: \"#2F5D8A\",\r\n\r\n  search:{\r\n    bgColor:\"#051A33\",\r\n    input:{\r\n      color:'#5f8bbf',\r\n      placeHolderColor:'#235A84',\r\n    },\r\n    result:{\r\n      bgColor:'#0f2744',\r\n      item:{\r\n        color:'#5f8bbf',\r\n        hoverBgColor:'#183553',\r\n      },\r\n      seperator:{\r\n        color:'#356097',\r\n      }\r\n    }\r\n  },\r\n  weather:{\r\n    bgColor:\"#051A33\",\r\n    title: \"#2F5D8A\",\r\n    pie:{\r\n      bgColor:\"#051A33\",\r\n    },\r\n    bars:{\r\n      bgColor:\"#051A33\",\r\n    }\r\n  },\r\n  forecast:{\r\n    bgColor:\"#051A33\",\r\n    title: \"#2F5D8A\",\r\n  }\r\n};\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport Header from \"../common/components/Header/header\";\nimport Spinner from \"../common/components/Spinner/spinner\";\nimport Search from \"../common/components/Search/search\";\nimport FiveDaysForecast from \"../common/components/Forecast/forecast\";\nimport Weather from \"../common/components/Weather/weather\";\nimport { RootState } from \"./store\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport \"./App.css\";\n\nfunction App() {\n  const darkMode = useSelector((state: RootState) => state.app.darkMode);\n  const loading = useSelector((state: RootState) => state.app.loading);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <GlobalStyles />\n      {loading && <Spinner />}\n      <Header />\n      <Search />\n      <Weather />\n      <FiveDaysForecast />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\nconst GlobalStyles = createGlobalStyle`\n  body{\n    background: ${({ theme }) =>\n      `url(${theme.backgroundImage}) no-repeat center 120%, \n       linear-gradient(${theme.backgroundGradient[0]} 0%, ${theme.backgroundGradient[1]} 100%)`};\n  }\n`;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport appReducer from './AppSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}